/* 	SOLUCION BOLETIN 3: SubConsultas
	UTILIZA EL ARCHIVO banco.sql	*/

/* 1. Por cada cliente, contar el número de cuentas bancarias que posee sin movimientos. 
Se deben mostrar: apellidos, nombre, num_cuentas_sin_movimiento (tomar como base el ejercicio 16 de las consultas de resumen)*/
SELECT CLIENTE.NOMBRE, CLIENTE.APELLIDOS, COUNT(CUENTA.COD_CUENTA) AS NUMERO_DE_CUENTAS
FROM CLIENTE INNER JOIN CUENTA ON CLIENTE.COD_CLIENTE = CUENTA.COD_CLIENTE 
WHERE CUENTA.COD_CUENTA NOT IN (SELECT MOVIMIENTO.COD_CUENTA FROM MOVIMIENTO)
GROUP BY CLIENTE.NOMBRE, CLIENTE.APELLIDOS;

/* 2. Mostrar los datos de aquellos clientes que en todas sus cuentas posean un saldo mayor de 15.000 euros.*/
SELECT NOMBRE, APELLIDOS, CU.COD_CUENTA, saldo 
FROM CLIENTE CLI JOIN CUENTA CU ON CLI.COD_CLIENTE = CU.COD_CLIENTE
WHERE 15000 < ALL (SELECT SALDO FROM CUENTA JOIN CLIENTE 
	ON CLIENTE.COD_CLIENTE = CUENTA.COD_CLIENTE 
	WHERE CLI.COD_CLIENTE = CLIENTE.COD_CLIENTE)
GROUP BY NOMBRE, APELLIDOS, CU.COD_CUENTA;

--comprobando devuelve 7, se ve que Angeles tiene una cuenta que lo cumple y otra que no
SELECT NOMBRE, APELLIDOS, CU.COD_CUENTA, SALDO 
FROM CLIENTE CLI JOIN CUENTA CU ON CLI.COD_CLIENTE = CU.COD_CLIENTE
ORDER BY NOMBRE, APELLIDOS;

-- Funciona pero para que todas lo cumplan, le digo que quite las que no lo cumplen.
SELECT CLIENTE.*, CUENTA.COD_CUENTA 
FROM CLIENTE INNER JOIN CUENTA ON CLIENTE.COD_CLIENTE = CUENTA.COD_CLIENTE 
AND CUENTA.COD_CLIENTE NOT IN (SELECT CUENTA.COD_CLIENTE FROM CUENTA WHERE SALDO <= 15000)
GROUP BY CLIENTE.NOMBRE;

/* 3. Mostrar los datos de aquellos clientes que alguna de sus cuentas posean un saldo superior a 60.000 euros.*/
SELECT CLIENTE.*, CUENTA.SALDO 
FROM CLIENTE INNER JOIN CUENTA ON CLIENTE.COD_CLIENTE = CUENTA.COD_CLIENTE 
WHERE CUENTA.COD_CUENTA IN (SELECT CUENTA.COD_CUENTA FROM CUENTA WHERE CUENTA.SALDO > 60000);

-- muestro solo el nombre para verlo bien
SELECT NOMBRE, APELLIDOS, CUENTA.SALDO 
FROM CLIENTE INNER JOIN CUENTA ON CLIENTE.COD_CLIENTE = CUENTA.COD_CLIENTE 
WHERE CUENTA.COD_CUENTA IN (SELECT CUENTA.COD_CUENTA FROM CUENTA WHERE CUENTA.SALDO > 60000);

-- comprobando
SELECT NOMBRE, APELLIDOS, CU.COD_CUENTA, SALDO 
FROM CLIENTE CLI JOIN CUENTA CU ON CLI.COD_CLIENTE = CU.COD_CLIENTE
ORDER BY NOMBRE, APELLIDOS;


/* 4. Mostrar los datos de aquellas cuentas que tenga algún movimiento a las 14:15 horas.*/
SELECT CUENTA.*, MOVIMIENTO.FECHA_HORA 
FROM CUENTA INNER JOIN MOVIMIENTO ON CUENTA.COD_CUENTA = MOVIMIENTO.COD_CUENTA
WHERE MOVIMIENTO.FECHA_HORA IN 
(SELECT MOVIMIENTO.FECHA_HORA 
FROM MOVIMIENTO
WHERE MOVIMIENTO.FECHA_HORA LIKE '%14:15%'); 

--alternativa extrayendo hora y minuto para comparar
SELECT CUENTA.*, MOVIMIENTO.FECHA_HORA
FROM CUENTA INNER JOIN MOVIMIENTO ON CUENTA.COD_CUENTA = MOVIMIENTO.COD_CUENTA
WHERE MOVIMIENTO.FECHA_HORA IN
(SELECT MOVIMIENTO.FECHA_HORA
  FROM MOVIMIENTO
  WHERE HOUR(MOVIMIENTO.FECHA_HORA)= '14'
	AND MINUTE(MOVIMIENTO.FECHA_HORA)= '15');

-- ALTERNATIVA
select * from cuenta 
where cod_cuenta in (select cod_cuenta from movimiento 
	where Date_format(movimiento.fecha_hora, '%H:%i')='14:15');
	
-- alternativa
SELECT *
FROM cuenta
WHERE cod_cuenta IN (SELECT movimiento.cod_cuenta
FROM movimiento
WHERE TIME (movimiento.fecha_hora) = '14:15:%');
	
/* 5. Mostrar los datos de aquellas cuentas que no tengan movimientos del tipo PT (pago con tarjeta).*/

SELECT CUENTA.*, MOVIMIENTO.COD_TIPO_MOVIMIENTO 
FROM CUENTA INNER JOIN MOVIMIENTO ON CUENTA.COD_CUENTA = MOVIMIENTO.COD_CUENTA 
WHERE MOVIMIENTO.COD_TIPO_MOVIMIENTO NOT IN 
(SELECT MOVIMIENTO.COD_TIPO_MOVIMIENTO FROM MOVIMIENTO
WHERE MOVIMIENTO.COD_TIPO_MOVIMIENTO LIKE 'PT')
GROUP BY CUENTA.COD_CUENTA;

/* 6. Mostrar los datos de las cuentas de las que no existan movimientos.*/
SELECT CUENTA.* 
FROM CUENTA 
WHERE CUENTA.COD_CUENTA NOT IN (SELECT COD_CUENTA FROM MOVIMIENTO);

/* 7. Mostrar los datos de las cuentas que tienen más de 1 movimiento del tipo PT (pago con tarjeta).*/
SELECT CUENTA.*  
FROM CUENTA INNER JOIN MOVIMIENTO ON CUENTA.COD_CUENTA = MOVIMIENTO.COD_CUENTA 
WHERE MOVIMIENTO.COD_TIPO_MOVIMIENTO IN 
(SELECT MOVIMIENTO.COD_TIPO_MOVIMIENTO 
	FROM MOVIMIENTO WHERE MOVIMIENTO.COD_TIPO_MOVIMIENTO LIKE 'PT') 
GROUP BY CUENTA.COD_CUENTA, CUENTA.SALDO, CUENTA.INTERES, CUENTA.COD_CLIENTE, CUENTA.COD_SUCURSAL 
HAVING count(MOVIMIENTO.COD_TIPO_MOVIMIENTO) >1;

SELECT CUENTA.*  
FROM CUENTA INNER JOIN MOVIMIENTO ON CUENTA.COD_CUENTA = MOVIMIENTO.COD_CUENTA 
WHERE MOVIMIENTO.COD_TIPO_MOVIMIENTO IN 
(SELECT MOVIMIENTO.COD_TIPO_MOVIMIENTO 
	FROM MOVIMIENTO WHERE MOVIMIENTO.COD_TIPO_MOVIMIENTO LIKE 'PT') 
GROUP BY CUENTA.COD_CUENTA
HAVING count(MOVIMIENTO.COD_TIPO_MOVIMIENTO) >1;
